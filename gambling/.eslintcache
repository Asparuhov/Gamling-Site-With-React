[{"C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\index.js":"1","C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\App.js":"2","C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\store\\reducer.js":"3","C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\Containers\\Shop\\Shop.js":"4","C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\Containers\\MainPage\\Main.js":"5","C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\Containers\\Inventory\\Inventory.js":"6","C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\Containers\\Wheel50x\\Wheel50xPage.js":"7","C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\Components\\SideDrawer\\SideDrawer.js":"8","C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\Components\\BackDrop\\Backdrop.js":"9","C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\Containers\\Shop\\Item.js":"10","C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\Containers\\Inventory\\ItemInventory.js":"11","C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\Components\\Wheel50x\\Wheel50x.js":"12","C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\Components\\Chat\\Chat.js":"13","C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\Components\\Roulette\\Roulette.js":"14","C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\Components\\Chat\\Message.js":"15","C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\Containers\\Login\\Login.js":"16","C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\Containers\\Register\\Register.js":"17"},{"size":674,"mtime":1610583153643,"results":"18","hashOfConfig":"19"},{"size":4588,"mtime":1610583465484,"results":"20","hashOfConfig":"19"},{"size":2567,"mtime":1610583535378,"results":"21","hashOfConfig":"19"},{"size":1443,"mtime":1610278563638,"results":"22","hashOfConfig":"19"},{"size":393,"mtime":1610278563636,"results":"23","hashOfConfig":"19"},{"size":1209,"mtime":1610278563634,"results":"24","hashOfConfig":"19"},{"size":415,"mtime":1610278563640,"results":"25","hashOfConfig":"19"},{"size":718,"mtime":1610278563618,"results":"26","hashOfConfig":"19"},{"size":201,"mtime":1610278563592,"results":"27","hashOfConfig":"19"},{"size":409,"mtime":1610278563637,"results":"28","hashOfConfig":"19"},{"size":541,"mtime":1610278563635,"results":"29","hashOfConfig":"19"},{"size":9409,"mtime":1610278563633,"results":"30","hashOfConfig":"19"},{"size":1595,"mtime":1610571133028,"results":"31","hashOfConfig":"19"},{"size":6513,"mtime":1610583329110,"results":"32","hashOfConfig":"19"},{"size":329,"mtime":1610280345242,"results":"33","hashOfConfig":"19"},{"size":1063,"mtime":1610576038928,"results":"34","hashOfConfig":"19"},{"size":1219,"mtime":1610575728034,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1yezmzq",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\index.js",[],["74","75"],"C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\App.js",["76"],"import {\r\n  Route,\r\n  Link,\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Main from \"./Containers/MainPage/Main\";\r\nimport classes from \"./App.module.css\";\r\nimport SideDrawer from \"./Components/SideDrawer/SideDrawer\";\r\nimport Backdrop from \"./Components/BackDrop/Backdrop\";\r\nimport Shop from \"./Containers/Shop/Shop\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport Inventory from \"./Containers/Inventory/Inventory\";\r\nimport Wheel50xPage from \"./Containers/Wheel50x/Wheel50xPage\";\r\nimport Login from \"./Containers/Login/Login\";\r\nimport Register from \"./Containers/Register/Register\";\r\nfunction App(props) {\r\n  let [Show, setShow] = useState(false);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"user\")\r\n      .then((res) => {\r\n        props.setCurrentUser({\r\n          id: res.data._id,\r\n          username: res.data.username,\r\n          email: res.data.email,\r\n        });\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n  return (\r\n    <Router>\r\n      <div style={{ height: \"100%\" }}>\r\n        {Show ? (\r\n          <div>\r\n            <SideDrawer />\r\n            <Backdrop clicked={() => setShow((prev) => !prev)} />\r\n          </div>\r\n        ) : null}\r\n        <div className={classes.App}>\r\n          <header>\r\n            <nav>\r\n              <button\r\n                className={classes.ThreeLines}\r\n                onClick={() => setShow((prev) => !prev)}\r\n              >\r\n                <li>\r\n                  {props.isAuthenticated ? (\r\n                    <button className={classes.Buttons}>Logout</button>\r\n                  ) : (\r\n                    <Link to=\"/login\" className={classes.Buttons}>\r\n                      Login\r\n                    </Link>\r\n                  )}\r\n                </li>\r\n                <div className={classes.Line}></div>\r\n                <div className={classes.Line}></div>\r\n                <div className={classes.Line}></div>\r\n              </button>\r\n              {props.isAuthenticated ? (\r\n                <li className={classes.Balance}>\r\n                  Balance: {props.user.balance}{\" \"}\r\n                  <p>logged as: {props.user.username}</p>\r\n                </li>\r\n              ) : null}\r\n              <div className={classes.Spacer} />\r\n              <ul>\r\n                <li>\r\n                  <Link className={classes.Link} to=\"/\">\r\n                    Roulette\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link className={classes.Link} to=\"/roulette-50x\">\r\n                    Wheel50X\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link className={classes.Link} to=\"/shop\">\r\n                    Shop\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link className={classes.Link} to=\"/inventory\">\r\n                    Inventory\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  {props.isAuthenticated ? (\r\n                    <button\r\n                      className={classes.Buttons}\r\n                      onClick={() => {\r\n                        localStorage.clear();\r\n                        window.location.reload();\r\n                      }}\r\n                    >\r\n                      Logout\r\n                    </button>\r\n                  ) : (\r\n                    <Link to=\"/login\" className={classes.Buttons}>\r\n                      Login\r\n                    </Link>\r\n                  )}\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n          </header>\r\n          <Route path=\"/roulette-50x\" exact component={Wheel50xPage} />\r\n          <Route path=\"/\" exact component={Main} />\r\n          <Route path=\"/shop\" exact component={Shop} />\r\n          <Route path=\"/inventory\" exact component={Inventory} />\r\n          <Route path=\"/login\" exact>\r\n            {\" \"}\r\n            {props.isAuthenticated ? <Redirect to=\"/\" /> : <Login />}{\" \"}\r\n          </Route>\r\n          <Route path=\"/register\" exact component={Register} />\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    balance: state.balance,\r\n    isAuthenticated: state.isAuthenticated,\r\n    user: state.currentUser,\r\n  };\r\n};\r\nconst toActions = (dispatch) => {\r\n  return {\r\n    setCurrentUser: (user) => dispatch({ type: \"SETCURRENTUSER\", user: user }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, toActions)(App);\r\n","C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\store\\reducer.js",["77"],"C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\Containers\\Shop\\Shop.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\Containers\\MainPage\\Main.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\Containers\\Inventory\\Inventory.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\Containers\\Wheel50x\\Wheel50xPage.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\Components\\SideDrawer\\SideDrawer.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\Components\\BackDrop\\Backdrop.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\Containers\\Shop\\Item.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\Containers\\Inventory\\ItemInventory.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\Components\\Wheel50x\\Wheel50x.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\Components\\Chat\\Chat.js",["78","79"],"import React, { useState } from \"react\";\r\nimport classes from \"./Chat.module.css\";\r\nimport Message from \"./Message\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { connect } from \"react-redux\";\r\nconst Chat = (props) => {\r\n  let [currentMessage, setCurrentMessage] = useState(\"\");\r\n  let [messages, setMessages] = useState([]);\r\n  const addMessage = () => {\r\n    setMessages((oldArray) => [\r\n      ...oldArray,\r\n      {\r\n        currentUser: 'Kris',\r\n        message: currentMessage,\r\n      },\r\n    ]);\r\n    setCurrentMessage(\"\");\r\n  };\r\n  return (\r\n    <div className={classes.Container}>\r\n      <div className={classes.header}>\r\n        <h1>Messages</h1>\r\n      </div>\r\n\r\n      <div className={classes.content}>\r\n        {messages.map((message) => {\r\n          if (message.message) {\r\n            return (\r\n              <Message user={message.currentUser} message={message.message} />\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n      <div className={classes.entermessage}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter your message..\"\r\n          onChange={(e) => {\r\n            setCurrentMessage(e.target.value);\r\n          }}\r\n          value={currentMessage}\r\n        />\r\n        <button\r\n          disabled={!props.isAuthenticated}\r\n          class={classes.send}\r\n          onClick={() => addMessage()}\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.isAuthenticated,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Chat);\r\n","C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\Components\\Roulette\\Roulette.js",["80","81"],"import classes from \"./Roulette.module.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Wheel } from \"react-custom-roulette\";\r\nimport { connect } from \"react-redux\";\r\nimport { Line } from \"rc-progress\";\r\nimport axios from \"axios\";\r\nconst Roulette = (props) => {\r\n  const data = [\r\n    { option: \"0\", style: { backgroundColor: \"green\", textColor: \"white\" } },\r\n    { option: \"1\", style: { backgroundColor: \"black\", textColor: \"white\" } },\r\n    { option: \"2\", style: { backgroundColor: \"red\", textColor: \"white\" } },\r\n    { option: \"3\", style: { backgroundColor: \"black\", textColor: \"white\" } },\r\n    { option: \"4\", style: { backgroundColor: \"red\", textColor: \"white\" } },\r\n    { option: \"5\", style: { backgroundColor: \"black\", textColor: \"white\" } },\r\n    { option: \"6\", style: { backgroundColor: \"red\", textColor: \"white\" } },\r\n    { option: \"7\", style: { backgroundColor: \"black\", textColor: \"white\" } },\r\n    { option: \"8\", style: { backgroundColor: \"red\", textColor: \"white\" } },\r\n    { option: \"9\", style: { backgroundColor: \"black\", textColor: \"white\" } },\r\n    { option: \"10\", style: { backgroundColor: \"red\", textColor: \"white\" } },\r\n    { option: \"11\", style: { backgroundColor: \"black\", textColor: \"white\" } },\r\n    { option: \"12\", style: { backgroundColor: \"red\", textColor: \"white\" } },\r\n    { option: \"13\", style: { backgroundColor: \"black\", textColor: \"white\" } },\r\n    { option: \"14\", style: { backgroundColor: \"red\", textColor: \"white\" } },\r\n  ];\r\n  const [progress, setProgress] = useState(100);\r\n  const [progressState, setProgressState] = useState(false);\r\n  const [mustSpin, setMustSpin] = useState(false);\r\n  const [prizeNumber, setPrizeNumber] = useState(null);\r\n  const [curretInputValue, setCurrentInputValue] = useState(null);\r\n  const [finalResult, setFinalResult] = useState({\r\n    number: null,\r\n    color: null,\r\n  });\r\n  useEffect(() => {\r\n    if (progress <= 0) {\r\n      setProgress(100);\r\n    }\r\n    let interval;\r\n    if (progressState) {\r\n      interval = setInterval(() => {\r\n        setProgress((prev) => prev - 1);\r\n      }, 96);\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [progressState, progress]);\r\n  const handleSpinClick = () => {\r\n    const newPrizeNumber = Math.floor(Math.random() * data.length);\r\n    setPrizeNumber(newPrizeNumber);\r\n    setFinalResult({\r\n      number: data[newPrizeNumber].option,\r\n      color: data[newPrizeNumber].style.backgroundColor,\r\n    });\r\n    setMustSpin(true);\r\n    setProgressState(false);\r\n  };\r\n  useEffect(handleSpinClick, []);\r\n  let progressMessage;\r\n  if (!props.isAuthenticated) {\r\n    progressMessage = (\r\n      <h1 style={{ color: \"white\", marginTop: \"5px\", fontSize: \"30px\" }}>\r\n        Sign in to play!\r\n      </h1>\r\n    );\r\n  } else if (props.isAuthenticated && progressState) {\r\n    progressMessage = (\r\n      <h1 style={{ color: \"white\", marginTop: \"5px\", fontSize: \"20px\" }}>\r\n        Place your bets\r\n      </h1>\r\n    );\r\n  } else {\r\n    progressMessage = (\r\n      <h1 style={{ color: \"white\", marginTop: \"5px\", fontSize: \"20px\" }}>\r\n        Good luck !!!\r\n      </h1>\r\n    );\r\n  }\r\n  useEffect(() => {\r\n    axios\r\n      .post(\"update\", props.user)\r\n      .then((res) => console.log(res.data))\r\n      .catch((err) => console.log(err));\r\n  }, [props.user.balance]);\r\n  return (\r\n    <div className={classes.Roulette}>\r\n      <Wheel\r\n        mustStartSpinning={mustSpin}\r\n        prizeNumber={prizeNumber}\r\n        data={data}\r\n        onStopSpinning={() => {\r\n          setProgress(100);\r\n          setMustSpin(false);\r\n          props.configureBalance(finalResult.color);\r\n          props.resetBets();\r\n          setProgressState(true);\r\n          setTimeout(handleSpinClick, 10000);\r\n        }}\r\n        radiusLineColor=\"white\"\r\n        radiusLineWidth={5}\r\n        outerBorderColor=\"black\"\r\n        outerBorderWidth={5}\r\n        innerBorderColor=\"black\"\r\n        innerBorderWidth={25}\r\n        innerRadius={5}\r\n      />\r\n      <div className={classes.D1}>\r\n        {\" \"}\r\n        <p>\r\n          <strong>Bet amount:</strong>\r\n        </p>\r\n        <input\r\n          type=\"number\"\r\n          onChange={(e) => setCurrentInputValue(e.target.value)}\r\n        ></input>\r\n      </div>\r\n      <div style={{ textShadow: \"white 0px 0px 10px\" }}>\r\n        <strong>Balance: {props.user.balance}</strong>\r\n      </div>\r\n      <button\r\n        className={classes.Button2}\r\n        onClick={() =>\r\n          props.configureBets(\r\n            \"black\",\r\n            Number(curretInputValue),\r\n            props.isAuthenticated\r\n          )\r\n        }\r\n        disabled={!progressState || !props.isAuthenticated ? true : false}\r\n      >\r\n        Black {props.bets.black ? props.bets.black : null}\r\n      </button>\r\n      <button\r\n        className={classes.Button1}\r\n        onClick={() =>\r\n          props.configureBets(\r\n            \"red\",\r\n            Number(curretInputValue),\r\n            props.isAuthenticated\r\n          )\r\n        }\r\n        disabled={!progressState || !props.isAuthenticated ? true : false}\r\n      >\r\n        Red {props.bets.red ? props.bets.red : null}\r\n      </button>\r\n      <button\r\n        className={classes.Button3}\r\n        onClick={() =>\r\n          props.configureBets(\r\n            \"green\",\r\n            Number(curretInputValue),\r\n            props.isAuthenticated\r\n          )\r\n        }\r\n        disabled={!progressState || !props.isAuthenticated ? true : false}\r\n      >\r\n        Green {props.bets.green ? props.bets.green : null}\r\n      </button>\r\n      <Line percent={progress} strokeWidth=\"4\" strokeColor=\"#D3D3D3\" />\r\n      {progressMessage}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.currentUser,\r\n    bets: state.bets,\r\n    isAuthenticated: state.isAuthenticated,\r\n  };\r\n};\r\nconst mapDispatchToState = (dispatch) => {\r\n  return {\r\n    addBalance: (amount) => dispatch({ type: \"ADDBALANCE\", amount: amount }),\r\n    removeBalance: (amount) =>\r\n      dispatch({ type: \"REMOVEBALANCE\", amount: amount }),\r\n    configureBets: (color, amount, isAuth) =>\r\n      dispatch({\r\n        type: \"CONFIGUREBETS\",\r\n        color: color,\r\n        amount: amount,\r\n        auth: isAuth,\r\n      }),\r\n    resetBets: () => dispatch({ type: \"RESETBETS\" }),\r\n    configureBalance: (color) =>\r\n      dispatch({ type: \"CONFIGUREBALANCE\", color: color }),\r\n    setCurrentUser: (user) => dispatch({ type: \"SETCURRENTUSER\", user: user }),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToState)(Roulette);\r\n","C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\Components\\Chat\\Message.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\Containers\\Login\\Login.js",[],"C:\\Users\\Chro\\Desktop\\GitHub\\Gambling-Site\\Gamling-Site-With-React\\gambling\\src\\Containers\\Register\\Register.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":29,"column":6,"nodeType":"88","endLine":29,"endColumn":8,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":92,"column":5,"nodeType":"92","messageId":"93","endLine":97,"endColumn":9},{"ruleId":"94","severity":1,"message":"95","line":4,"column":10,"nodeType":"96","messageId":"97","endLine":4,"endColumn":18},{"ruleId":"98","severity":1,"message":"99","line":26,"column":33,"nodeType":"100","messageId":"101","endLine":26,"endColumn":35},{"ruleId":"86","severity":1,"message":"102","line":59,"column":30,"nodeType":"88","endLine":59,"endColumn":32,"suggestions":"103"},{"ruleId":"86","severity":1,"message":"104","line":85,"column":6,"nodeType":"88","endLine":85,"endColumn":26,"suggestions":"105"},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["108"],"no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-unused-vars","'useAuth0' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["109"],"React Hook useEffect has a missing dependency: 'props.user'. Either include it or remove the dependency array.",["110"],"no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [props]",{"range":"117","text":"118"},"Update the dependencies array to be: [data]",{"range":"119","text":"120"},"Update the dependencies array to be: [props.user, props.user.balance]",{"range":"121","text":"122"},[1029,1031],"[props]",[2553,2555],"[data]",[3285,3305],"[props.user, props.user.balance]"]